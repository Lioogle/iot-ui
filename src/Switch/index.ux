<template>

    <div class="root" onclick="fn">
        <stack>
            <div class="box" style="background-color:{{bgColor}};">

            </div>
            <div class="circle-box {{activeClass}}">
                <div class="circle"></div>
            </div>

        </stack>

    </div>
</template>

<style>
    .root {
        width: 100px;
        height: 50px;
    }

    stack {
        align-items: center;
    }

    .box {
        border-radius: 25px;
        width: 100%;
        height: 100%;
    }

    .circle-box {
        padding-left: 8px;
        padding-right: 8px;

        width: 100%;
    }

    .circel-checked {
        animation-name: checked;
        animation-duration: 100ms;
        animation-iteration-count: 1;
        transform: translateX(42);
    }

    .circel-dischecked {
        animation-name: dischecked;
        animation-duration: 100ms;
        animation-iteration-count: 1;
        transform: translateX(0);
    }

    .circle {
        width: 42px;
        height: 42px;
        border-radius: 42px;
        background-color: #ffffff;

    }

    @keyframes checked {
        0% {

            transform: translateX(0);
        }

        100% {

            transform: translateX(42);
        }
    }

    @keyframes dischecked {
        0% {

            transform: translateX(42);
        }

        100% {

            transform: translateX(0);
        }
    }
</style>

<script>


    export default {
        data() {
            return {
                activeClass: 'circel-checked',
                bgColor: '#60D2DD'
            }
        },
        props: {
            change: {
                default: function () {

                }
            },
            checked: {
                default: false
            },
            disabled: {
                default: false
            }
        },

        onInit() {

            this.isChecked();
            this.$watch('checked', 'checkedChange');
            this.$watch('disabled', 'configChange');

        },
        checkedChange() {

            this.isChecked();
        },
        configChange() {

            this.isChecked();

        },
        fn() {
            let disabled = this.disabled;
            if (!disabled) {
                this.checked = !this.checked;

                this.isChecked();

                if (this.change) {
                    this.change(this.checked);
                }
            };


        },
        isChecked() {


            if (this.disabled) {
                if (this.checked) {
                    this.activeClass = 'circel-checked';
                    this.bgColor = '#CFF1F5';
                } else {
                    this.activeClass = 'circel-dischecked';
                    this.bgColor = '#F3F3F3';
                }
            } else {
                if (this.checked) {
                    this.activeClass = 'circel-checked';
                    this.bgColor = '#60D2DD';
                } else {
                    this.activeClass = 'circel-dischecked';
                    this.bgColor = '#D8D8D8';
                }
            }


        }
    }
</script>